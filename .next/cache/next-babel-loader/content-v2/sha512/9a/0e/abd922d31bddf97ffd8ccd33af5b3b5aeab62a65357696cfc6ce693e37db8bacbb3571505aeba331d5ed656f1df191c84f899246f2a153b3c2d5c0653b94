{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// file: pages/blog/[slug].js\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport NavBlog from \"../../components/NavBlog\";\nimport Footer from \"../../components/Footer\";\nimport Share from \"../../components/Share\";\n\nfunction BlogPostPage(props) {\n  const {\n    metaTitle,\n    title,\n    content,\n    author,\n    metaDescription\n  } = props.blog;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, metaTitle), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  }), __jsx(\"meta\", {\n    namme: \"description\",\n    content: metaDescription\n  })), __jsx(\"main\", {\n    class: \"font-sans bg-white\"\n  }, __jsx(\"div\", null, __jsx(NavBlog, {\n    title: title\n  }), __jsx(\"section\", {\n    class: \"bg-white mt-20\"\n  }, __jsx(\"div\", {\n    class: \"max-w-2xl px-6 text-center mx-auto\"\n  }, __jsx(\"h1\", {\n    class: \"text-5xl font-semibold text-gray-800\"\n  }, title), __jsx(Link, {\n    href: \"../\"\n  }, __jsx(\"small\", {\n    class: \"bg-indigo-600 text-white rounded px-1 cursor-pointer\"\n  }, \"by \", author)))), __jsx(\"section\", {\n    class: \" pattern py-20\"\n  }, __jsx(\"div\", {\n    class: \"max-w-5xl px-6 mx-auto text-justify blog\",\n    dangerouslySetInnerHTML: {\n      __html: content\n    }\n  })), __jsx(\"section\", {\n    class: \"bg-gray-900 py-20\"\n  }, __jsx(\"div\", {\n    class: \"max-w-5xl px-6 mx-auto text-center\"\n  }, __jsx(\"h2\", {\n    class: \"text-2xl font-semibold text-gray-800\"\n  }, \"Latest Posts\"), __jsx(\"div\", {\n    class: \"flex flex-col items-center justify-center mt-6\"\n  }, __jsx(\"a\", {\n    class: \"max-w-2xl w-full block bg-white shadow-md rounded-md border-t-4 border-indigo-600 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\",\n    href: \"#\"\n  }, __jsx(\"div\", {\n    class: \"flex items-center justify-between px-4 py-2\"\n  }, __jsx(\"h3\", {\n    class: \"text-lg font-medium text-gray-700\"\n  }, \"Easy, Free Laravel CI Using GitHub Actions\"), __jsx(\"span\", {\n    class: \"block text-gray-600 font-light text-sm\"\n  }, \"20 Jan 2020\"))), __jsx(\"a\", {\n    class: \"mt-8 max-w-2xl w-full block bg-white shadow-md rounded-md border-t-4 border-indigo-600 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\",\n    href: \"#\"\n  }, __jsx(\"div\", {\n    class: \"flex items-center justify-between px-4 py-2\"\n  }, __jsx(\"h3\", {\n    class: \"text-lg font-medium text-gray-700\"\n  }, \"Pest: a delightful PHP Testing Framework\"), __jsx(\"span\", {\n    class: \"block text-gray-600 font-light text-sm\"\n  }, \"29 Oct 2019\"))), __jsx(\"a\", {\n    class: \"mt-8 max-w-2xl w-full block bg-white shadow-md rounded-md border-t-4 border-indigo-600 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\",\n    href: \"#\"\n  }, __jsx(\"div\", {\n    class: \"flex items-center justify-between px-4 py-2\"\n  }, __jsx(\"h3\", {\n    class: \"text-lg font-medium text-gray-700\"\n  }, \"Using inline SVGs in Vue components\"), __jsx(\"span\", {\n    class: \"block text-gray-600 font-light text-sm\"\n  }, \"15 Oct 2019\"))), __jsx(\"a\", {\n    class: \"mt-8 max-w-2xl w-full block bg-white shadow-md rounded-md border-t-4 border-indigo-600 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\",\n    href: \"#\"\n  }, __jsx(\"div\", {\n    class: \"flex items-center justify-between px-4 py-2\"\n  }, __jsx(\"h3\", {\n    class: \"text-lg font-medium text-gray-700\"\n  }, \"Acceptance Testing Laravel & VueJs Apps with Codeception\"), __jsx(\"span\", {\n    class: \"block text-gray-600 font-light text-sm\"\n  }, \"3 Oct 2019\")))), __jsx(\"div\", {\n    class: \"flex items-center justify-center mt-12\"\n  }, __jsx(\"a\", {\n    class: \"flex items-center text-gray-600 hover:underline hover:text-gray-500\",\n    href: \"#\"\n  }, __jsx(\"span\", null, \"View More\"), __jsx(\"svg\", {\n    class: \"h-5 w-5 ml-1\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, __jsx(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M17 8l4 4m0 0l-4 4m4-4H3\"\n  })))))), __jsx(Footer, null))));\n} // pass props to BlogPostPage component\n\n\nexport async function getStaticProps(context) {\n  const fs = require(\"fs\");\n\n  const html = require(\"remark-html\");\n\n  const highlight = require(\"remark-highlight.js\");\n\n  const unified = require(\"unified\");\n\n  const markdown = require(\"remark-parse\");\n\n  const matter = require(\"gray-matter\");\n\n  const slug = context.params.slug; // get slug from params\n\n  const path = `${process.cwd()}/contents/${slug}.md`; // read file content and store into rawContent variable\n\n  const rawContent = fs.readFileSync(path, {\n    encoding: \"utf-8\"\n  });\n  const {\n    data,\n    content\n  } = matter(rawContent); // pass rawContent to gray-matter to get data and content\n\n  const result = await unified().use(markdown).use(highlight) // highlight code block\n  .use(html).process(content); // pass content to process\n\n  return {\n    props: {\n      blog: _objectSpread(_objectSpread({}, data), {}, {\n        content: result.toString()\n      })\n    }\n  };\n} // generate HTML paths at build time\n\nexport async function getStaticPaths(context) {\n  const fs = require(\"fs\");\n\n  const path = `${process.cwd()}/contents`;\n  const files = fs.readdirSync(path, \"utf-8\");\n  const markdownFileNames = files.filter(fn => fn.endsWith(\".md\")).map(fn => fn.replace(\".md\", \"\"));\n  return {\n    paths: markdownFileNames.map(fileName => {\n      return {\n        params: {\n          slug: fileName\n        }\n      };\n    }),\n    fallback: false\n  };\n}\nexport default BlogPostPage;","map":null,"metadata":{},"sourceType":"module"}